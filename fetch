#!/usr/bin/bash

### VARIABLES ###
user="$(\whoami)"
distro="$(grep PRETTY /etc/os-release | grep -o '".*"' | sed 's/"//g')"
kernel="$(uname -r)"
arch="$(uname -m)"
mus="$(mpc -f "%artist% - (%date%) %album% - %title%" | head -n1)"
up="$(checkupdates | wc -l)"
shell="$(basename "$SHELL")"
shver="$(bash --version | head -n1 | sed 's/[^0-9]*//' | sed 's/\s.*$//')"
uptime="$(uptime -p | sed 's/up //')"
storage="$(used)"
cpu="$(grep "model name" /proc/cpuinfo | head -n1 | sed 's/.*://' | sed '1s/^.//')"
cores="$(grep "model name" /proc/cpuinfo | wc -l)"
gpu="$(lshw -quiet -numeric -C display 2> /dev/null | grep product | awk -F'[][]' '{print $2}')"
ram="$(free -g | grep Mem | awk '{print $2 " GiB"}')"

## Variables for wm/de. ##
wm="$(tail -n 1 "${HOME}/.xinitrc" | cut -d ' ' -f 2)"
de="${XDG_CURRENT_DESKTOP}"

# Set to N/A if wm is unavailable.
if [ "$wm" = "" ]; then
	wm="N/A"
else
	wm="$wm"
fi

# Set to N/A if de is unavailable.
if [ "$de" = "" ]; then
	de="N/A"
else
	de="$de"
fi

# Variables for IP Address.
ip="$(curl --silent http://ipecho.net/plain)"

if [ "$ip" = "47.26.85.3" ]; then
	ip="47.26.85.3 | You are using Charter."
else
	ip="$ip | You are using ProtonVPN."
fi

## Variables for pkgs. (Arch only.)
total="$(pacman -Q | wc -l)"
core="$(paclist core | wc -l)"
extra="$(paclist extra | wc -l)"
community="$(paclist community | wc -l)"
aur="$(pacman -Qm | wc -l)"

## Variables for storage.
dev="/dev/sda"
used="$(df -h | grep /dev/sda | cut -c 23-26)B"
tota1="$(df -h | grep /dev/sda | cut -c 29-32)B"

### OUTPUT - MINIMAL ###
output_minimal () {
echo "USER              =   $user"
echo "SHELL             =   $shell"
echo "WINDOW MANAGER    =   $wm"
echo "DISTRO            =   $distro"
echo "KERNEL            =   $kernel"
echo "PACKAGES          =   $(pacman -Q | wc -l)"
}

### OUTPUT - NORMAL ###
output () {
echo "\\    / /\\   |    |    |--- \\   /     |" 
echo " \\  / /__\\  |    |    |---  \\ /      |"
echo "  \\/ /----\\ |___ |___ |---   |       |"
echo "--------------------------------------"
echo
echo "USER              =   $user"
echo "SHELL             =   $shell $shver"
echo "WINDOW MANAGER    =   $wm"
echo "DISTRO            =   $distro $arch"
echo "KERNEL            =   $kernel"
echo "PACKAGES          =   $total (total) | $core (core), $extra (extra), $community (community), $aur (aur)"
}

### OUTPUT - EXTRA ###
output_extra () {
echo "\\    / /\\   |    |    |--- \\   /     |" 
echo " \\  / /__\\  |    |    |---  \\ /      |"
echo "  \\/ /----\\ |___ |___ |---   |       |"
echo "--------------------------------------"
echo
echo "SYSTEM INFO" 
echo "---------"
echo "USER                  =   $user"
echo "SHELL                 =   $shell $shver"
echo "WINDOW MANAGER        =   $wm"
echo "DESKTOP ENVIRONMENT   =   $de"
echo "DISTRO                =   $distro $arch"
echo "KERNEL                =   $kernel"
echo "PACKAGES              =   $total (total) | $core (core), $extra (extra), $community (community), $aur (aur)"
echo "RAM                   =   $ram"
echo "CPU                   =   $cpu ($cores Cores)"
echo "GPU                   =   $gpu"
echo
echo "EXTRA INFO"
echo "----------"
echo "IP                    =   $ip"
echo "MUSIC                 =   $mus"
echo "UPTIME                =   $uptime"
echo "STORAGE               =   You are using $used of $tota1 on $dev."
echo "PENDING UPDATES       =   You have $up pending updates."
}

options () {
	if [ "$1" = "" ]; then
		tewisay -f blank "$(output)"
	else
		if [ "$1" = "help" ]; then
			tewisay -f blank "$(echo -e "Usage:\n------\n\nminimal:      Minimal output.\nextra:        Extra output.\n")"
		else
			if [ "$1" = "minimal" ]; then
				tewisay -f blank "$(output_minimal)"
			else
				if [ "$1" = "extra" ]; then
					tewisay -f blank "$(output_extra)"
				else
					echo "Bad arguments or broken script. Exiting now."
					exit 0
				fi
			fi
		fi
	fi
}

options "$@"
